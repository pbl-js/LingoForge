// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Language {
  EN
  PL
}

model Translation {
  id             Int      @id @default(autoincrement())
  language       Language
  content        String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  audioUrl       String?
  timestampsJson String? // New field to store the timestamps as JSON

  word                 Word?        @relation(fields: [wordId], references: [id], onDelete: Cascade)
  wordId               Int?
  useCaseTitle         UseCase?     @relation("UseCaseTitleTranslation", fields: [useCaseTitleId], references: [id], onDelete: Cascade)
  useCaseTitleId       Int?
  useCaseDescription   UseCase?     @relation("UseCaseDescriptionTranslation", fields: [useCaseDescriptionId], references: [id], onDelete: Cascade)
  useCaseDescriptionId Int?
  useCaseWord          UseCase?     @relation("UseCaseWordTranslation", fields: [useCaseWordId], references: [id], onDelete: Cascade)
  useCaseWordId        Int?
  sentence             Sentence?    @relation(fields: [sentenceId], references: [id], onDelete: Cascade)
  sentenceId           Int?
  similarWord          SimilarWord? @relation(fields: [similarWordId], references: [id], onDelete: Cascade)
  similarWordId        Int?
}

model Sentence {
  id           Int           @id @default(autoincrement())
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  useCase      UseCase       @relation(fields: [useCaseId], references: [id], onDelete: Cascade)
  useCaseId    Int
  translations Translation[]
}

model UseCase {
  id                      Int           @id @default(autoincrement())
  wordId                  Int
  word                    Word          @relation(fields: [wordId], references: [id], onDelete: Cascade)
  sentences               Sentence[]
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt
  titleTranslations       Translation[] @relation("UseCaseTitleTranslation")
  descriptionTranslations Translation[] @relation("UseCaseDescriptionTranslation")
  wordTranslations        Translation[] @relation("UseCaseWordTranslation")
}

model SimilarWord {
  id           Int           @id @default(autoincrement())
  wordId       Int
  word         Word          @relation(fields: [wordId], references: [id], onDelete: Cascade)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  translations Translation[]
}

model Word {
  id           Int           @id @default(autoincrement())
  userId       String
  useCases     UseCase[]
  similarWords SimilarWord[]
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  translations Translation[]
  // gameDataSetId Int?
  // gameDataSet   GameDataSet? @relation(fields: [gameDataSetId], references: [id], onDelete: Cascade)
}

// model GameDataSet {
//   id Int @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   words Word[]
// }
